import re

def is_false_positive_person(row):
    if row['Entity'] != "PERSON":
        return False  # Keep non-PERSON entities

    text = row['Text']
    text_lower = text.lower()
    start = row['Start']
    end = row['End']
    span = text_lower[start:end].strip()

    # Case 1: Exclude fragments related to "last tdan fu"
    if any(term in span for term in ["last", "tdan", "td", "an", "fu"]):
        return True

    # Case 2: Exclude if the matched span is â‰¤ 2 characters or is "ned"
    if len(span) <= 2 or span == "ned":
        return True

    # Case 3: Exclude if PA/NP/WHNP directly follows the matched name
    following_text = text_lower[end:].strip()
    if re.match(r"^(pa|np|whnp)\b", following_text):
        return True

    # Case 4: Exclude if entity is within 3 words after "Dr."
    tokens = list(re.finditer(r"\b\w+\b", text_lower))
    for i, token in enumerate(tokens):
        if token.group().rstrip(".") == "dr":
            for j in range(i + 1, min(i + 4, len(tokens))):  # next 3 tokens
                tok_start = tokens[j].start()
                tok_end = tokens[j].end()
                if not (end <= tok_start or start >= tok_end):  # overlapping
                    return True

    return False

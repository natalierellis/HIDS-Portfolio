from presidio_analyzer import AnalyzerEngine
from presidio_analyzer.nlp_engine import TransformersNlpEngine
from presidio_analyzer.nlp_engine.transformers_ner_model_configuration import NerModelConfiguration

# If you've already used snapshot_download and have this:
local_model_path = "./hf_model_cache/models--obi--deid_roberta_i2b2/snapshots/<your_snapshot_id>"

# Define transformer config using local path
model_config = [
    {
        "lang_code": "en",
        "model_name": {
            "spacy": "en_core_web_sm",
            "transformers": local_model_path
        }
    }
]

# Map model labels to Presidio entity types
mapping = {
    "PATIENT": "PERSON",
    "DOCTOR": "PERSON",
    "HOSPITAL": "LOCATION",
    "DATE": "DATE_TIME",
    "AGE": "AGE",
    "ID": "ID"
    # add more as needed
}

# Set up the NER model configuration
ner_config = NerModelConfiguration(
    model_to_presidio_entity_mapping=mapping,
    alignment_mode="expand",
    aggregation_strategy="max",
    labels_to_ignore=["O"]
)

# Create NLP engine with transformer + config
nlp_engine = TransformersNlpEngine(
    models=model_config,
    ner_model_configuration=ner_config
)

# Initialize the analyzer
analyzer = AnalyzerEngine(
    nlp_engine=nlp_engine,
    supported_languages=["en"]
)

# Try it out
text = "Patient Jane Doe was admitted to NY Hospital on 04/01/2022."
results = analyzer.analyze(text=text, language="en")

for r in results:
    print(f"{r.entity_type} -> '{text[r.start:r.end]}' (score: {r.score:.2f})")




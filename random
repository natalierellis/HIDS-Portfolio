import pandas as pd
from presidio_analyzer import AnalyzerEngine
from presidio_analyzer.nlp_engine import TransformersNlpEngine
from presidio_analyzer.nlp_engine.transformers_ner_model_configuration import NerModelConfiguration

# Step 1: Define transformer and spaCy model config
model_config = [
    {
        "lang_code": "en",
        "model_name": {
            "spacy": "en_core_web_sm",  # Tokenization and lemmatization
            "transformers": "obi/deid_roberta_i2b2"  # or "StanfordAIMI/stanford-deidentifier-base"
        }
    }
]

# Step 2: Map NER model labels to Presidio entities
mapping = dict(
    PER="PERSON",
    LOC="LOCATION",
    ORG="ORGANIZATION",
    AGE="AGE",
    ID="ID",
    EMAIL="EMAIL",
    DATE="DATE_TIME",
    PHONE="PHONE_NUMBER",
    PERSON="PERSON",
    LOCATION="LOCATION",
    GPE="LOCATION",
    ORGANIZATION="ORGANIZATION",
    NORP="NRP",
    PATIENT="PERSON",
    STAFF="PERSON",
    HOSP="LOCATION",
    PATORG="ORGANIZATION",
    TIME="DATE_TIME",
    HCW="PERSON",
    HOSPITAL="LOCATION",
    FACILITY="LOCATION",
    VENDOR="ORGANIZATION",
)

# Step 3: Set up model behavior
labels_to_ignore = ["O"]
ner_model_configuration = NerModelConfiguration(
    model_to_presidio_entity_mapping=mapping,
    alignment_mode="expand",          # expands model span to match PHI
    aggregation_strategy="max",       # max score across tokens
    labels_to_ignore=labels_to_ignore
)

# Step 4: Create the NLP engine
transformers_nlp_engine = TransformersNlpEngine(
    models=model_config,
    ner_model_configuration=ner_model_configuration
)

# Step 5: Build the analyzer using the custom NLP engine
analyzer = AnalyzerEngine(
    nlp_engine=transformers_nlp_engine,
    supported_languages=["en"]
)




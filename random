from presidio_analyzer import AnalyzerEngine, RecognizerRegistry
from presidio_analyzer.nlp_engine import NlpEngineProvider
import spacy

# Custom local path where model is cached
model_path = "./hf_model_cache/obi_deid_roberta_i2b2"

# Pull supported entities from configuration
supported_entities = BERT_DEID_CONFIGURATION.get("PRESIDIO_SUPPORTED_ENTITIES")

# Use the local model path here
transformers_recognizer = TransformersRecognizer(
    model_path=model_path,
    supported_entities=supported_entities
)

# Load transformer model with config
transformers_recognizer.load_transformer(**BERT_DEID_CONFIGURATION)

# Set up Presidio analyzer engine
registry = RecognizerRegistry()
registry.add_recognizer(transformers_recognizer)
registry.remove_recognizer("SpacyRecognizer")

if not spacy.util.is_package("en_core_web_sm"):
    spacy.cli.download("en_core_web_sm")

nlp_configuration = {
    "nlp_engine_name": "spacy",
    "models": [{"lang_code": "en", "model_name": "en_core_web_sm"}],
}

nlp_engine = NlpEngineProvider(nlp_configuration=nlp_configuration).create_engine()

analyzer = AnalyzerEngine(registry=registry, nlp_engine=nlp_engine)

# Test it
sample = "My name is John and I live in NY"
results = analyzer.analyze(sample, language="en", return_decision_process=True)

print("Found the following entities:")
for result in results:
    print(result, '----', sample[result.start:result.end])



